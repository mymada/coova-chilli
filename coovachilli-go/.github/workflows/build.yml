name: Build Cross-Platform

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]
  release:
    types: [ created ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.1'

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: 386
          - goos: freebsd
            goarch: amd64
          - goos: openbsd
            goarch: amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.1'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpcap-dev

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOARM: ${{ matrix.goarm }}
          CGO_ENABLED: 1
        run: |
          output_name="coovachilli-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goarm }}" != "" ]; then
            output_name="${output_name}v${{ matrix.goarm }}"
          fi

          # Install cross-compilation toolchain if needed
          if [ "${{ matrix.goarch }}" = "arm64" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
            export CC=aarch64-linux-gnu-gcc
          elif [ "${{ matrix.goarch }}" = "arm" ]; then
            sudo apt-get install -y gcc-arm-linux-gnueabihf
            export CC=arm-linux-gnueabihf-gcc
          elif [ "${{ matrix.goarch }}" = "386" ]; then
            sudo apt-get install -y gcc-multilib
          fi

          go build -ldflags="-s -w" -o "${output_name}" ./cmd/coovachilli

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: coovachilli-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goarm && format('v{0}', matrix.goarm) || '' }}
          path: coovachilli-*

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*/coovachilli-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
