FROM golang:1.25.1-bookworm AS builder

WORKDIR /build

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpcap-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=1 go build -ldflags="-s -w" -o coovachilli ./cmd/coovachilli

# Runtime image
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpcap0.8 \
    iptables \
    ufw \
    iproute2 \
    iputils-ping \
    dnsutils \
    tcpdump \
    net-tools \
    curl \
    ca-certificates \
    procps \
    kmod \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy binary from builder
COPY --from=builder /build/coovachilli /app/coovachilli

# Copy default config
COPY test/integration/config.iptables.yaml /app/config.iptables.yaml
COPY test/integration/config.ufw.yaml /app/config.ufw.yaml

# Create necessary directories
RUN mkdir -p /var/run /var/log /tmp/chilli

# Entrypoint script
COPY test/integration/entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

EXPOSE 8080 67/udp 547/udp

ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["/app/coovachilli"]
